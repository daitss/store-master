<html lang='en'>
  <head>
    <meta charset='utf-8'>
    <link href='/site.css' rel='stylesheet' type='text/css'>
    <link href='/favicon.ico' rel='shortcut icon'>
    <title>Current Sinatra Settings</title>
  </head>
  <body>

    <h2>Current Sinatra Settings</h2>
    <dl>

      <dt><i>absolute_redirects: <b><%= opts[:absolute_redirects] %></b></i></dt><dd><p>
	  If disabled, Sinatra will allow relative redirects, however, Sinatra will
	  no longer conform with RFC 2616 (HTTP 1.1), which only allows absolute
	  redirects.
	</p>
	<p>
	  Enable if your app is running behind a reverse proxy that has not been set
	  up properly. Note that the <tt>url</tt> helper will still produce absolute
	  URLs, unless you pass in <tt>false</tt> as second parameter.
	</p>
	<p>
	  Disabled per default.
	</p>
      </dd>

      <dt><i>add_charsets: <b><%= opts[:add_charsets] %></b></i></dt><dd><p>
	  mime types the <tt>content_type</tt> helper will automatically add the
	  charset info to.
	</p>
	<p>
	  You should add to it rather than overriding this option:
	</p>
	<pre>
	  settings.add_charsets &lt;&lt; &quot;application/foobar&quot;
	</pre>

      </dd>
      <dt><i>app_file: <b><%= opts[:app_file] %></b></i></dt><dd><p>
	  main application file, used to detect project root, views and public folder
	  and inline templates.
	</p>
      </dd>
      <dt><i>bind: <b><%= opts[:bind] %></b></i></dt><dd><p>
	  IP address to bind to (default: 0.0.0.0). Only used for built-in server.
	</p>
      </dd>
      <dt><i>default_encoding: <b><%= opts[:default_encoding] %></b></i></dt><dd><p>
	  encoding to assume if unknown (defaults to <tt>&quot;utf-8&quot;</tt>).
	</p>

      </dd>
      <dt><i>dump_errors: <b><%= opts[:dump_errors] %></b></i></dt><dd><p>
	  display errors in the log.
	</p>
      </dd>
      <dt><i>environment: <b><%= opts[:environment] %></b></i></dt><dd><p>
	  current environment, defaults to <tt>ENV['RACK_ENV']</tt>, or
	  <tt>&quot;development&quot;</tt> if not available.
	</p>
      </dd>
      <dt><i>logging: <b><%= opts[:logging] %></b></i></dt><dd><p>
	  use the logger.
	</p>
      </dd>
      <dt><i>lock: <b><%= opts[:lock] %></b></i></dt><dd><p>
	  Places a lock around every request, only running processing on request per
	  Ruby process concurrently.
	</p>
	<p>
	  Enabled if your app is not thread-safe. Disabled per default.
	</p>
      </dd>
      <dt><i>method_override:  <b><%= opts[:method_override] %></b></i></dt><dd><p>
	  use <tt>_method</tt> magic to allow put/delete forms in browsers that
	  don&#8217;t support it.

	</p>
      </dd>
      <dt><i>port: <b><%= opts[:port] %></b></i></dt><dd><p>
	  Port to listen on. Only used for built-in server.
	</p>
      </dd>
      <dt><i>prefixed_redirects: <b><%= opts[:prefixed_redirects] %></b></i></dt><dd><p>
	  Whether or not to insert <tt>request.script_name</tt> into redirects if no
	  absolute path is given. That way <tt>redirect '/foo'</tt> would behave like
	  <tt>redirect to('/foo')</tt>. Disabled per default.

	</p>
      </dd>
      <dt><i>public: <b><%= opts[:public] %></b></i></dt><dd><p>
	  folder public files are served from
	</p>
      </dd>
      <dt><i>reload_templates: <b><%= opts[:reload_templates] %></b></i></dt><dd><p>
	  whether or not to reload templates between requests. Enabled in development
	  mode and on Ruby 1.8.6 (to compensate a bug in Ruby causing a memory leak).
	</p>
      </dd>
      <dt><i>root: <b><%= opts[:root] %></b></i></dt><dd><p>
	  project's root folder.
	</p>
      </dd>

      <dt><i>raise_errors: <b><%= opts[:raise_errors] %></b></i></dt><dd><p>
	  raise exceptions (will stop application).
	</p>
      </dd>
      <dt><i>run: <b><%= opts[:run] %></b></i></dt><dd><p>
	  if enabled, Sinatra will handle starting the web server, do not enable if
	  using rackup or other means.
	</p>
      </dd>
      <dt><i>running: <b><%= opts[:running] %></b></i></dt><dd><p>
	  is the built-in server running now? do not change this setting!
	</p>
      </dd>
      <dt><i>server: <b><%= opts[:server] %></b></i></dt><dd><p>

	  server or list of servers to use for built-in server. defaults to
	  [&#8216;thin&#8217;, &#8216;mongrel&#8217;, &#8216;webrick&#8217;], order
	  indicates priority.
	</p>
      </dd>
      <dt><i>sessions: <b><%= opts[:sessions] %></b></i></dt><dd><p>
	  enable cookie based sessions.
	</p>
      </dd>
      <dt><i>show_exceptions: <b><%= opts[:show_exceptions] %></b></i></dt><dd><p>
	  show a stack trace in the browser.

	</p>
      </dd>
      <dt><i>static: <b><%= opts[:static] %></b></i></dt><dd><p>
	  Whether Sinatra should handle serving static files. Disable when using a
	  Server able to do this on its own. Disabling will boost performance.
	  Enabled per default.
	</p>
      </dd>
      <dt><i>views: <b><%= opts[:views] %></b></i></dt><dd><p>
	  views folder.
	</p>
      </dd>
    </dl>

  </body>
</html>
