# This is an example of the DAITSS configuration file restricted to
# the data necessary to run the storemaster service.
#
# You must set up your web server to set the environment variable
# DAITSS_CONFIG to point to a configuration file along these lines,
# though typically it will have sections for many services in addition
# to this one.
#
# Please don't use tabs in this file.

defaults:

    fixity_expired_days:         60
    fixity_stale_days:           45
    required_pools:              2

database:

    storage_master_db:           postgres://storemaster:topsecret@localhost/storemaster_db
    daitss_db:                   postgres://daitss:topsecret@localhost/daitss_db

# We normally name sections after the virtual hostname used by an
# applcation (this is so one physical host can run multiple services
# of the same kind).  An application's configuration code typically
# checks the VIRTUAL_HOSTNAME environment variable to determine the
# appropriate section to load.  Typically VIRTUAL_HOSTNAME is set in
# the same place that the DAITSS_CONFIG environment is set.

storage-master.example.org:

    log_syslog_facility:         LOG_LOCAL0
    log_filename:                /path/to/name/of/file.log
    log_database_queries:        false


collect-fixities:

    log_syslog_facility:         LOG_LOCAL0
    log_filename:                /path/to/name/of/file.log
    log_database_queries:        false
    pid_directory:               /var/run/fixty
    server_address:              storage-master.example.org:8080


# defaults
# ========
#
# These settings are required for two or more services and 
# and scripts.
#
# defaults:required_pools
# -----------------------
# How many pool servers are we required to connect to?  Use zero for a
# 'stub server' for testing - in that case, nothing will actually be
# stored. Used by the storemaster web service and collect-fixities




# database:storage_master_db
# -----------------------
# Required, the database connection string for storemaster database
# string.  Supported vendors: postgres. Some fields are optional - for
# instance, if there is no password and you use the postgres default
# port, 5432:
#
#  postgres://username@hostname/database
#
# With port and password it looks like
#
#  vendor://username:password@hostname:port/database" 
#
# N.B.  This means that this config file should have read permissions
# retricted to the user running the service, or an appropriately
# restricted group.
#


# storemaster
# ===========
#
# The storemaster service requires variables database:storage_master_db,
# defaults:required_pools, as well as the following:
# 
# storemaster:log_database_queries
# --------------------------------
# Should we log database queries? defaults to false.  These generate
# very large logs, so it's only recommended for troubleshooting and
# learning.
#
# storemaster:log_filename
# ------------------------
# If set, direct log information to this file. If neither log_filename
# nor log_syslog_facility are set, log to STDERR.  log_filename should
# be unique to this service.  If you want to share output from
# multiple services to one file, use syslog.
#
# storemaster:log_syslog_facility
# -------------------------------
# If set, direct log information to this syslog facility (see
# /etc/syslog.conf). If neither log_filename nor log_syslog_facility
# are set, log to STDERR.
#



# collect-fixities
# ================
#
# The script collect-fixities retrieves fixity information from the
# silo-pools via web service calls, then inserts events into the
# daitss database.  Events recorded are 'fixity success', 'fixity
# failure' and 'integrity failure'.
#
# collect-fixities:log_database_queries
# -------------------------------------
# Should we log database queries? defaults to false.  These generate
# very large logs, so it's only recommended for troubleshooting and
# learning.
#
# collect-fixities:log_filename
# -----------------------------
# If set, direct log information to this file. If neither log_filename
# nor log_syslog_facility are set, log to STDERR.  log_filename should
# be unique to this service.  If you want to share output from
# multiple services to one file, use syslog.
#
# collect-fixities:log_syslog_facility
# ------------------------------------
# If set, direct log information to this syslog facility (see
# /etc/syslog.conf). If neither log_filename nor log_syslog_facility
# are set, log to STDERR.
#
# collect-fixities:pid_directory
# ------------------------------
# If pid_directory is set, use it to write a lock file (named
# collect-fixities.pid) so that there cannot be multiple copies of the
# script running. If not present no locking will be done. At FDA we
# use xymon to monitor our system, so the presence of the file in the
# abscence of a process indicates an error
#
# collect-fixities:server_address
# -------------------------------
# The address of the storemaster webservice, including port,
# that collect fixities is working against.
# 
