#!/usr/bin/env ruby

require 'rubygems'
require 'bundler/setup'
require 'logger'
require 'daitss'

include Daitss

load_archive

INTERVAL = 1

LOG = Logger.new $stdout

@lifo = true if ARGV.pop == "--newest"

def make_wips
  ready = Request.all(:is_authorized => true,
                      :status => :enqueued,
                      :order => [ :timestamp.asc ])
  ready.reject! { |r| r.package.wip }

  ready.each do |r|
    r.dispatch
    w = r.package.wip
    LOG.info "#{w.id}.#{w.task} made"
  end

end

def start_wips

  startable = archive.workspace.reject do |w|
    w.done? or w.running? or w.snafu? or w.stopped?
  end

  running = archive.workspace.select { |w| w.running? }
  n = archive.throttle - running.size

  startable.sort! { |a, b| File.mtime(a.path) <=> File.mtime(b.path) }
  startable.reverse! if @lifo

  startable.take(n > 0 ? n : 0).each do |w|
    w.spawn
    LOG.info "#{w.id}.#{w.task} spawned"
  end

end

LOG.info "daitss pulse started"

loop do
  make_wips
  start_wips
  sleep INTERVAL
end
