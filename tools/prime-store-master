#!/usr/bin/env ruby
#
# From the storemaster library:

ENV['BUNDLE_GEMFILE'] = File.expand_path(File.join(File.dirname(__FILE__), '../Gemfile'))
require 'bundler/setup'
$LOAD_PATH.unshift File.expand_path(File.join(File.dirname(__FILE__), '../lib/'))

require 'store/dm'
require 'store/pool'

DM.setup('/opt/fda/etc/db.yml', 'store_master')

ENV['TZ'] = 'UTC'  # ?

# Our data - we don't use field 5 here:
#
# E20051213_AAAAAA	5541877401c9195db13337be810a088d	028d9ecae596c73e6917dd38be3f6561ac42f4f2	6161367040	http://silos.ripple.fcla.edu/001/data/E20051213_AAAAAA	2008-05-23 16:54:50
# E20060108_AAAAAA	f144338b97a12dcb8a45893e5f046b2b	a045b847770239f9e03e9d855fdc3440759cf5dc	9851709440	http://silos.ripple.fcla.edu/001/data/E20060108_AAAAAA	2008-05-24 03:29:18



loc   = 'http://silos.ripple.fcla.edu/001/data/'
pool1 =  Store::Pool.exists?(loc) ? Store::Pool.lookup(loc) : Store::Pool.create(loc) 

loc   = 'http://silos.ripple.fcla.edu/002/data/'
pool2 =  Store::Pool.exists?(loc) ? Store::Pool.lookup(loc) : Store::Pool.create(loc) 



while line = STDIN.gets do

  ieid, md5, sha1, size, loc, date = line.strip.split(/\s+/, 6)
  unless ieid =~ /^E2/
    STDERR.puts "Unexpected line '#{line.strip}', skipping"
    next
  end

  if pkg = DM::Package.first(:name => ieid)
    if not pkg.destroy 
      STDERR.puts "Unable to remove pre-exising package record for name '#{ieid}', skipping"
      next
    end
  end


  pkg  = DM::Package.create(:ieid => ieid, :name => ieid, :md5 => md5, :sha1 => sha1, :size => size)
  pkg.copies << DM::Copy.create(:store_location => "http://silos.ripple.fcla.edu/001/data/#{ieid}", :pool => pool1.dm_record)
  pkg.copies << DM::Copy.create(:store_location => "http://silos.ripple.fcla.edu/002/data/#{ieid}", :pool => pool2.dm_record)

  if not pkg.save
    STDERR.puts "Error saving #{ieid}"
  end

end
